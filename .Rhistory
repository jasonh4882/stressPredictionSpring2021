rmsePt2Testing <- rmse(trainPt2$pstr, TrainPt2TestingMeanPrediction)
trainFiltered2 <- 0
trainFiltered2MeanModel <- 0
trainFiltered2MeanPrediction <- 0
trainFiltered2 <- trainNoNAMean
trainFiltered2 <- trainFiltered2 %>% select(39, 1, 3, 5, 11, 12, 32, 46, 49, 52, 58, 65, 75, 77, 78, 82)
trainFiltered2MeanModel <- glm(pstr ~ .,data = trainFiltered2)
trainFiltered2MeanPrediction <- predict.glm(trainFiltered2MeanModel, testNoNAMean)
rmseFiltered2 <- rmse(trainNoNAMean$pstr, trainFiltered2MeanPrediction)
trainFiltered2 <- 0
trainFiltered2MeanModel <- 0
trainFiltered2MeanPrediction <- 0
trainFiltered2 <- trainNoNAMean
trainFiltered2 <- trainFiltered2 %>% select(39, 1, 3, 5, 11, 12, 32, 46, 49, 52, 58, 65, 75, 77, 78, 82)
trainFiltered2MeanModel <- glm(pstr ~ .,data = trainFiltered2)
trainFiltered2MeanPrediction <- predict.glm(trainFiltered2MeanModel, testNoNAMean)
rmseFiltered2 <- rmse(trainNoNAMean$pstr, trainFiltered2MeanPrediction)
attemptFilteredG2 <- data.frame(trainFiltered2MeanPrediction)
write.csv(attemptFilteredG2 , "HampshireSubmissionFilteredGLM2")
trainFiltered2 <- 0
trainFiltered2MeanModel <- 0
trainFiltered2MeanPrediction <- 0
trainFiltered2 <- trainNoNAMean
trainFiltered2 <- trainFiltered2 %>% select(39, 1, 3, 5, 11, 12, 32, 46, 49, 52, 58, 65, 75, 77, 78, 82)
trainFiltered2MeanModel <- glm(pstr ~ .,data = trainFiltered2)
trainFiltered2MeanPrediction <- predict.glm(trainFiltered2MeanModel, testNoNAMean)
rmseFiltered2 <- rmse(trainNoNAMean$pstr, trainFiltered2MeanPrediction)
trainFiltered3 <- 0
trainFiltered3MeanModel <- 0
trainFiltered3MeanPrediction <- 0
trainFiltered3 <- trainNoNAMean
trainFiltered3 <- trainFiltered3 %>% select(39, 1, 3, 5, 11, 12, 32, 46, 49, 52, 58, 65, 75, 77, 78, 82)
trainFiltered3MeanModel <- randomForest(pstr ~ .,data = trainFiltered3)
trainFiltered3MeanPrediction <- predict.glm(trainFiltered3MeanModel, testNoNAMean)
trainFiltered3 <- 0
trainFiltered3MedModel <- 0
trainFiltered3MedPrediction <- 0
trainFiltered3 <- trainNoNAMedInt
trainFiltered3 <- trainFiltered3 %>% select(39, 1, 3, 5, 11, 12, 32, 46, 49, 52, 58, 65, 75, 77, 78, 82)
trainFiltered3MedModel <- randomForest(pstr ~ .,data = trainFiltered3)
trainFiltered3MedPrediction <- predict.glm(trainFiltered2MeanModel, testNoNAMedInt)
trainFiltered3 <- 0
trainFiltered3MedModel <- 0
trainFiltered3MedPrediction <- 0
trainFiltered3 <- trainNoNAMedInt
trainFiltered3 <- trainFiltered3 %>% select(39, 1, 5, 11, 12, 32, 46, 49, 52, 58, 65, 75, 77, 78, 82)
trainFiltered3MedModel <- randomForest(pstr ~ .,data = trainFiltered3)
trainFiltered3MedPrediction <- predict.glm(trainFiltered2MeanModel, testNoNAMedInt)
trainFiltered3MedPrediction <- predict(trainFiltered3MeanModel, testNoNAMedInt)
trainFiltered3 <- 0
trainFiltered3MedModel <- 0
trainFiltered3MedPrediction <- 0
trainFiltered3 <- trainNoNAMedInt
trainFiltered3 <- trainFiltered3 %>% select(39, 1, 5, 11, 12, 32, 46, 49, 52, 58, 65, 75, 77, 78, 82)
trainFiltered3MedModel <- randomForest(pstr ~ .,data = trainFiltered3)
trainFiltered3MedPrediction <- predict(trainFiltered3MedModel, testNoNAMedInt)
attemptFiltered3RF <- data.frame(trainFiltered3MedPrediction)
setwd("~/IUPUI_Spring_2021/CSCI 48900/competition/Submissions")
write.csv(attemptFiltered3RF , "HampshireSubmissionFilteredRF2.csv")
library(data.table)
library(dbplyr)
library(dplyr)
library(gbm)
library(ggplot2)
library(gtable)
library(Metrics)
library(modelr)
library(randomForest)
library(tidyr)
library(tibble)
library(tidyverse)
View(trainRaw)
View(trainRaw)
HW5Train <- trainRaw %>% (-SEX, -higheduc)
HW5Train <- trainRaw %>% select(-SEX, -higheduc)
install.packages(glmnet)
"glmnet"
install.packages("glmnet"")
install.packages("glmnet")
install.packages("glmnet")
library(glmnet)
HW5glmnet <- glmnet(HW5Train, pstr, alpha = 1)
data(QuickStartExample)
HW5Train <- trainRaw %>% select(-SEX, -higheduc, -pstr)
trainPstr <- data.frame(train_pstr)
View(trainPstr)
View(trainPstr)
View(x)
View(y)
View(x)
View(y)
trainPstr <- 0
trainPstr <- c(train_pstr)
trainPstr <- 0
trainPstr <- cbind(train_pstr)
View(trainPstr)
trainMatrix <- as.matrix(HW5Train)
View(trainMatrix)
HW5glmnet <- glmnet(HW5Train, trainPstr, alpha = 1)
HW5glmnet <- glmnet(trainMatrix, trainPstr, alpha = 1)
View(x)
remove(trainMatrix)
HW5TrainNum <- as.numeric(HW5Train)
trainPstr <- 0
trainPstr <- as.numeric(train_pstr)
View(x)
trainPstr <- 0
trainPstr[1:8522, 1:79] <- 0
trainPstr[8522, 79] <- 0
trainPstr[8522, 79] <- c(0)
trainPstr <- c(0 0 0)
trainPstr <- c(0, 0, 0)
trainPstr[1] <- c(0, 0, 0)
trainPstr[,2] <- c(0, 0, 0)
trainPstr <- 0
x
trainPstr <- x
trainPstr <- y
HW5TrainNum <- x
remove(trainPstr)
HW5trainPstr <- y
HW5trainPstr <- train_pstr
HW5trainPstr <- y
HW5trainPstr <- c(train_pstr)
HW5trainPstr <- y
HW5trainPstr <- cbind(train_pstr)
HW5trainPstr <- cbind(as.numeric(train_pstr))
HW5TrainNum <- x
HW5TrainNum[1:8522] <- 0
HW5TrainNum <- x
HW5TrainNum[1:8522,1:79] <- 0
HW5TrainNum[,1:79] <- 0
HW5TrainNum[,79] <- 0
HW5TrainNum[8522,79] <- 0
HW5TrainNum[1:8522,1:20] <- 0
HW5TrainNum[1:8522] <- 0
HW5TrainNum <- x
HW5TrainNum[1:8522] <- cbind(0)
HW5TrainNum[1:8522, 1:79] <- cbind(0)
HW5TrainNum <- x
HW5TrainNum[8522] = 0
HW5TrainNum[8522,79] = 0
HW5TrainNum[8522,79] <- 0
HW5TrainNum[8522,79] <- cbind(0)
HW5TrainNum[8522,79] <- cbind(as.numeric(0)
)
HW5TrainNum <- x + x
HW5TrainNum <- x
HW5TrainNum <- concat(x, x)
HW5TrainNum <- join(x, x)
HW5TrainNum <- cbind(x, x)
HW5TrainNum <- cbind(x, x, x, x)
HW5TrainNum <- HW5TrainNum %>% select(-80)
HW5TrainNum <- cbind(x, x, x, 0, 0, 0, 0, 0,)
HW5TrainNum <- cbind(x, x, x, 0, 0, 0, 0, 0, 0)
HW5TrainNum <- cbind(x, x, x, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
HW5TrainNum <- cbind(x, x, x, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
HW5TrainNum[8522,79] <- 0
HW5TrainNum <- rbind(y)
HW5TrainNum <- cbind(x, x, x, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
HW5TrainNum[1:8522,79] <- 0
HW5TrainNum <- data.frame(8522, 79)
HW5TrainNum <- 0
HW5TrainNum <- cbind(HW5Train)
HW5TrainNum <- rbind(HW5Train)
HW5TrainNum <- cbind(as.numeric(HW5Train))
View(HW5trainPstr)
HW5TrainNum <- 0
HW5TrainNum <- data.matrix(HW5Train, rownames.force = NA)
View(HW5TrainNum)
View(HW5trainPstr)
HW5TrainNum <- data.matrix(HW5Train, col.force = NA)
HW5TrainNum <- data.matrix(HW5Train, colnames.force = NA)
HW5TrainNum <- unname(as.matrix(HW5Train))
HW5TrainNum <- unname(as.matrix((as.numeric(HW5Train))
HW5TrainNum <- unname(as.matrix((as.numeric(HW5Train))))
HW5TrainNum <- unname(as.numeric(as.matrix(HW5Train)))
HW5TrainNum <- unname(as.matrix(HW5Train))
sapply(HW5TrainNum, as.numeric)
HW5TrainNum<-sapply(HW5TrainNum, as.numeric)
HW5TrainNum <- unname(as.matrix(HW5Train))
`storage.mode<-`(HW5TrainNum, "numeric")
storage.mode<-(HW5TrainNum, "numeric")
storage.mode(HW5TrainNum)<-"numeric"
HW5TrainNum <- unname(as.matrix(HW5Train))
HW5TrainNum <- mapply(HW5TrainNum, FUN=as.numeric)
HW5TrainNum <- unname(as.matrix(HW5Train))
HW5TrainNum <- mapply(HW5TrainNum, FUN=as.numeric)
HW5TrainNum <- mapply(data=HW5TrainNum, ncol=79, nrow=8522)
HW5TrainNum <- matrix(data=HW5TrainNum, ncol=79, nrow=8522)
HW5glmnet <- glmnet(HW5TrainNum, HW5TrainPstr, alpha = 1)
View(x)
View(y)
View(x)
View(HW5TrainNum)
View(HW5trainPstr)
HW5glmnet <- glmnet(x, y)
HW5Train <- 0
HW5Train <- trainNoNAMean %>% select(-SEX, -higheduc, -pstr)
HW5TrainNum <- unname(as.matrix(HW5Train))
HW5TrainNum <- mapply(HW5TrainNum, FUN=as.numeric)
HW5TrainNum <- matrix(data=HW5TrainNum, ncol=79, nrow=8522)
HW5glmnet <- glmnet(HW5TrainNum, HW5TrainPstr, alpha = 1)
HW5glmnet <- glmnet(x = HW5TrainNum,y = HW5TrainPstr, alpha = 1)
View(trainFiltered3)
HW5Train <- 0
HW5Train <- trainRaw %>% select(2,3,5,8,9,11,13,16,17,21,23,25,30,31,32,34,37,38,41,46)
HW5TrainNum <- unname(as.matrix(HW5Train))
HW5TrainNum <- mapply(HW5TrainNum, FUN=as.numeric)
warnings()
HW5TrainNum <- matrix(data=HW5TrainNum, ncol=20, nrow=8522)
HW5TrainNum <- cbind(HW5trainPstr, HW5trainPstr)
HW5TrainNum <- cbind(1:20 = HW5trainPstr)
HW5TrainNum <- cbind(1:20)
HW5TrainNum <- cbind(1:8522, 1:20)
HW5TrainNum <- rbind(1:8522)
HW5TrainNum <- rbind(c(1:8522))
HW5TrainNum <- rbind(c(1:8522), c(1:8522))
HW5TrainNum <- cbind(c(1:8522), c(1:8522))
z <- cbind(1:8522)
z <- as.numeric(cbind(1:8522))
HW5TrainNum <- cbind(z, z)
HW5TrainNum <- cbind(z, z, z, z, z, z, z, z, z, z, z, z, z, z, z, z, z, z, z, z)
HW5TrainNum <- cbind(z, z)
HW5TrainNum <- as.numeric(cbind(z, z, z, z, z, z, z, z, z, z, z, z, z, z, z, z, z, z, z, z))
HW5TrainNum <- cbind(z, z, z, z, z, z, z, z, z, z, z)
HW5TrainNum <- cbind(z, z, z, z, z, z)
HW5TrainNum <- cbind(z, z, z, z, z, z, z)
HW5TrainNum <- cbind(z, z, z, z, z, z, z, z)
HW5TrainNum <- cbind(z, z, z, z, z, z, z)
HW5TrainNum <- as.numeric(cbind(z, z, z, z, z, z, z, z, z, z, z, z, z, z, z, z, z, z, z, z))
HW5TrainNum <- cbind(z, z, z, z, z, z, z, z, z, z, z, z, z, z, z, z, z, z, z, z)
HW5TrainNum <- cbind(c(1:8522),c(1:8522),c(1:8522),c(1:8522),c(1:8522),c(1:8522),c(1:8522),c(1:8522),c(1:8522),c(1:8522),c(1:8522),c(1:8522),c(1:8522),c(1:8522),c(1:8522),c(1:8522),c(1:8522),c(1:8522),c(1:8522),c(1:8522))
HW5TrainNum <- cbind(c(1:8522), c(1:8522))
HW5TrainNum <- cbind(as.numeric(c(1:8522)), as.numeric(c(1:8522)), as.numeric(c(1:8522)), as.numeric(c(1:8522)), as.numeric(c(1:8522)), as.numeric(c(1:8522)), as.numeric(c(1:8522)), as.numeric(c(1:8522)), as.numeric(c(1:8522)), as.numeric(c(1:8522)), as.numeric(c(1:8522)), as.numeric(c(1:8522)), as.numeric(c(1:8522)), as.numeric(c(1:8522)), as.numeric(c(1:8522)), as.numeric(c(1:8522)), as.numeric(c(1:8522)), as.numeric(c(1:8522)), as.numeric(c(1:8522)), as.numeric(c(1:8522)))
HW5Train <- trainRaw %>% select(2,5,8,9,11,13,16,17,21,23,25,30,31,32,34,37,38,41,46,58)
HW5TrainNum[,1] <- as.numeric(HW5Train[,1])
for(i in 1:20){
HW5TrainNum[,i] <- as.numeric(HW5Train[,i])
}
HW5glmnet <- glmnet(x = HW5TrainNum,y = HW5TrainPstr, alpha = 1)
HW5trainPstr <- 0
HW5trainPstr <- trainRaw$pstr
HW5TrainNum <- 0
HW5TrainNum <- trainRaw %>% select(-1, -2)
HW5TrainNum$SEX = as.numeric(as.factor(HW5TrainNum$SEX))
HW5Table <- 0
HW5Table <- trainRaw group_by(higheduc) %>% summarise(mnpstr=mean(pstr))
HW5Table <- trainRaw %>% group_by(higheduc) %>% summarise(mnpstr=mean(pstr))
HW5TrainNum_join <- left_join(HW5trainPstr, HW5Table, by="higheduc")
left_join
HW5TrainNum_join <- left_join(HW5TrainNum, HW5Table, by="higheduc")
HW5TrainNum_join$higheduc = NULL
HW5TrainNum_join[is.na(X_join)] = 0
HW5TrainNum_join[is.na(HW5TrainNum_join)] = 0
HW5TrainNum_join = as.matrix(HW5TrainNum_join)
HW5glmnet <- 0
HW5glmnet <- glmnet(HW5TrainNum_join, HW5trainPstr, alpha = 1)
View(HW5glmnet)
View(HW5glmnet)
plot(HW5glmnet)
HW5trainPstr <- 0
HW5trainPstr <- trainRaw$pstr
HW5TrainNum <- 0
View(trainRaw)
View(trainRaw)
HW5TrainNum <- trainRaw %>% select(-1)
HW5TrainNum$SEX = as.numeric(as.factor(HW5TrainNum$SEX))
HW5Table <- 0
HW5Table <- trainRaw %>% group_by(higheduc) %>% summarise(mnpstr=mean(pstr))
HW5TrainNum_join <- left_join(HW5TrainNum, HW5Table, by="higheduc")
HW5TrainNum_join$higheduc = NULL
HW5TrainNum_join[is.na(X_join)] = 0
HW5trainPstr <- 0
HW5trainPstr <- trainRaw$pstr
HW5TrainNum <- 0
HW5TrainNum <- trainRaw %>% select(-1)
HW5TrainNum$SEX = as.numeric(as.factor(HW5TrainNum$SEX))
HW5Table <- 0
HW5Table <- trainRaw %>% group_by(higheduc) %>% summarise(mnpstr=mean(pstr))
HW5TrainNum_join <- left_join(HW5TrainNum, HW5Table, by="higheduc")
HW5TrainNum_join$higheduc = NULL
HW5TrainNum_join[is.na(HW5TrainNum_join)] = 0
HW5TrainNum_join = as.matrix(HW5TrainNum_join)
HW5glmnet <- 0
HW5glmnet <- glmnet(HW5TrainNum_join, HW5trainPstr, alpha = 1)
plot(HW5glmnet)
View(HW5glmnet)
plot(HW5glmnet)
HW5trainPstr <- 0
HW5trainPstr <- trainRaw$pstr
HW5TrainNum <- 0
HW5TrainNum <- trainFiltered3
HW5TrainNum  = as.matrix(HW5TrainNum)
HW5glmnet <- 0
HW5glmnet <- glmnet(HW5TrainNum, HW5trainPstr, alpha = 1)
plot(HW5glmnet)
model <- keras_model_sequential()''
library(keras)
library(imager)
mnist <- dataset_mnist()
x_train <- mnist$train$x
y_train <- mnist$train$y
x_test <- mnist$test$x
y_test <- mnist$test$y
# look at first image and label
plot(as.cimg(t(x_train[1,,])))
y_train[1]
# reshape images to 1d vectors (for dense neural net)
x_train <- array_reshape(x_train, c(nrow(x_train), 784))
x_test <- array_reshape(x_test, c(nrow(x_test), 784))
# rescale to 0 to 1 (or could whiten)
x_train <- x_train / 255
x_test <- x_test / 255
# keras expects classes to be one hot encoded (last layer size is 10)
y_train <- to_categorical(y_train, 10)
y_test <- to_categorical(y_test, 10)
# create the model
model <- keras_model_sequential()
model %>%
layer_dense(units = 256, activation = 'relu', input_shape = c(784)) %>%
layer_dropout(rate = 0.4) %>%
layer_dense(units = 128, activation = 'relu') %>%
layer_dropout(rate = 0.3) %>%
layer_dense(units = 10, activation = 'softmax')
# inspect the model
summary(model)
# compile model and specify optimization
model %>% compile(
loss = 'categorical_crossentropy',
optimizer = optimizer_adam(),
metrics = c('accuracy')
)
# fit model
history <- model %>% fit(
x_train, y_train,
epochs = 30, batch_size = 128,
validation_split = 0.2
)
# view error
plot(history)
# can predict on new data
model %>% predict_classes(x_test)
install.packages(keras)
install.packages("keras")
install.packages("imager")
mnist <- dataset_mnist()
x_train <- mnist$train$x
y_train <- mnist$train$y
x_test <- mnist$test$x
y_test <- mnist$test$y
# look at first image and label
plot(as.cimg(t(x_train[1,,])))
y_train[1]
# reshape images to 1d vectors (for dense neural net)
x_train <- array_reshape(x_train, c(nrow(x_train), 784))
x_test <- array_reshape(x_test, c(nrow(x_test), 784))
# rescale to 0 to 1 (or could whiten)
x_train <- x_train / 255
x_test <- x_test / 255
# keras expects classes to be one hot encoded (last layer size is 10)
y_train <- to_categorical(y_train, 10)
y_test <- to_categorical(y_test, 10)
# create the model
model <- keras_model_sequential()
model %>%
layer_dense(units = 256, activation = 'relu', input_shape = c(784)) %>%
layer_dropout(rate = 0.4) %>%
layer_dense(units = 128, activation = 'relu') %>%
layer_dropout(rate = 0.3) %>%
layer_dense(units = 10, activation = 'softmax')
# inspect the model
summary(model)
# compile model and specify optimization
model %>% compile(
loss = 'categorical_crossentropy',
optimizer = optimizer_adam(),
metrics = c('accuracy')
)
# fit model
history <- model %>% fit(
x_train, y_train,
epochs = 30, batch_size = 128,
validation_split = 0.2
)
# view error
plot(history)
# can predict on new data
model %>% predict_classes(x_test)
library(keras)
library(imager)
mnist <- dataset_mnist()
x_train <- mnist$train$x
y_train <- mnist$train$y
x_test <- mnist$test$x
y_test <- mnist$test$y
mnist <- dataset_mnist()
x_train <- mnist$train$x
y_train <- mnist$train$y
x_test <- mnist$test$x
y_test <- mnist$test$y
mnist <- dataset_mnist()
x_train <- trainRaw %>% select(-pstr)
y_train <- trainRaw %>% select(pstr)
plot(as.cimg(t(x_train[1,,])))
plot(as.cimg(t(x_train[1,])))
x_test <- testRaw
y_test <- 0
x_train <- array_reshape(x_train, c(nrow(x_train), 8352))
x_test <- array_reshape(x_test, c(nrow(x_test), 8352))
8352
x_train <- array_reshape(x_train, c(nrow(x_train), 784))
x_test <- array_reshape(x_test, c(nrow(x_test), 784))
x_train <- as.numeric(x_train)
x_train <- as.vector(x_train)
x_train <- array_reshape(x_train, c(nrow(x_train)))
x_test <- array_reshape(x_test, c(nrow(x_test)))
install.packages("reshape2")
library(reshape2)
library(reshape2)
x_train  <- melt( x_train , na.rm= TRUE )
print(x_train )
View(attemptFiltered3RF)
save.image("~/IUPUI_Spring_2021/CSCI 48900/competition/rDATA.RData")
View(attemptFiltered3RF)
View(testNoNAMed)
View(testNoNAMean)
View(testNoNAMean)
remove(trainFiltered2MeanModel)
remove(trainFiltered3MeanModel)
remove(trainFiltered3MedModel)
remove(trainMeanModelGBM)
remove(trainFiltered2MeanModel)
remove(train)
View(trainMeanModelGBM)
remove(trainMeanModelGBM)
View(trainMedModelGBM)
remove(trainMedModelGBM)
View(trainPt1MeanModelGBM)
remove(trainPt1MeanModelGBM)
View(trainPt1MeanModelLM)
remove(trainPt1MeanModelLM)
View(trainPt1MedModelGBM)
remove(trainPt1MedModelGBM)
View(trainPt1MedModelLM)
remove(trainPt1MedModelLM)
save.image("F:/School/IUPUI_S6_2021_Spring/CSCI 48900/competition/RDataNoGBMorLM.RData")
View(trainPt1MeanModelRF)
remove(trainPt1MeanModelRF)
save.image("F:/School/IUPUI_S6_2021_Spring/CSCI 48900/competition/RDataNoGBMorLM1.RData")
View(trainFiltered2MeanModel)
remove(trainFiltered2MeanModel)
View(trainFiltered3MeanModel)
remove(trainFiltered3MeanModel)
View(trainFiltered3MedModel)
remove(trainFiltered3MedModel)
View(trainMeanModelFilteredGLM)
remove(trainMeanModelFilteredGLM)
View(trainMeanModelFilteredRF)
remove(trainMeanModelFilteredRF)
View(trainMeanModelGLM)
remove(trainMeanModelGLM)
View(trainMeanModelRF)
remove(trainMeanModelRF)
View(trainMedModelGLM)
remove(trainMedModelGLM)
View(trainMedModelRF)
remove(trainMedModelRF)
View(trainPt1MeanModelGLM)
remove(trainPt1MeanModelGLM)
View(trainPt1MeanModelRF)
remove(trainPt1MeanModelRF)
View(trainPt1MedModelGLM)
remove(trainPt1MedModelGLM)
View(trainPt1MedModelRF)
remove(trainPt1MedModelRF)
View(TrainPt1TestingMeanModel)
remove(TrainPt1TestingMeanModel)
save.image("F:/School/IUPUI_S6_2021_Spring/CSCI 48900/competition/.RDataNoLists.RData")
View(trainPt1TestNoNAMean)
View(trainFiltered2MeanModel)
remove()
remove(trainFiltered2MeanModel)
View(trainFiltered3MeanModel)
remove(trainFiltered3MeanModel)
View(trainMeanModelFilteredGLM)
remove(trainMeanModelFilteredGLM)
View(trainMeanModelFilteredRF)
remove(trainMeanModelFilteredRF)
View(trainNoNAMed)
View(trainMeanModelGLM)
remove(trainMeanModelGLM)
View(trainMeanModelRF)
remove(trainMeanModelRF)
View(trainPt1MeanModelGLM)
remove(trainPt1MeanModelGLM)
View(TrainPt1TestingMeanModel)
remove(TrainPt1TestingMeanModel)
View(trainPt1MeanModelRF)
remove(trainPt1MeanModelRF)
save.image("F:/School/IUPUI_S6_2021_Spring/CSCI 48900/competition/.RDataNoMeanLists.RData")
View(trainFiltered3MedModel)
remove(trainFiltered3MedModel)
View(trainMedModelGLM)
remove(trainMedModelGLM)
View(trainMedModelRF)
remove(trainMedModelRF)
View(trainPt1MedModelGLM)
remove(trainPt1MedModelGLM)
View(trainPt1MedModelRF)
remove(trainPt1MedModelRF)
save.image("F:/School/IUPUI_S6_2021_Spring/CSCI 48900/competition/.RDataNoMedLists.RData")
